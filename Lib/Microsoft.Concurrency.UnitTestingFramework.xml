<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Concurrency.UnitTestingFramework</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.UnitTestMethodAttribute">
            <summary>
            Marks a method as a non-Chess test (i.e. Unless the <see cref="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestMethodAttribute"/> attribute
            is also applied, mchess and Alpaca will not see the method.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.TestTypeAttributeBase">
            <summary>
            A base class for attributes that define a test type.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.ITestTypeAttribute">
            <summary>Makes the attribute as a marker for a test class.</summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.UnitTestMethodAttribute.#ctor">
            <summary>Marks a method as a non-chess test method.</summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions">
            <summary>
            A data structure that represents all the options available on the command line for tweaking mchess.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Parses a new instance based on the given element.
            Any attributes that match actual options will be used.
            </summary>
            <param name="xopts">An element. May be null. Does not need to be an MChessOptions element.</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.SetDontPreempts(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
            <summary>
            Sets the DontPreemptXXX properties by parsing the valid elements passed in.
            </summary>
            <param name="togglePreemptElements">The enumerable of <see cref="F:Microsoft.Concurrency.TestTools.UnitTesting.Chess.XChessNames.TogglePreemptability"/> elements to add.</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.MergeWith(Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions)">
            <summary>Merges in the specified options from other into this instance.</summary>
            <param name="other">may be null.</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.Clone">
            <summary>Creates a copy of all the options set on this instance.</summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.Validate">
            <summary>Validates the configuration of this instance.</summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.MaxChessTime">
            <summary>
            Maximum time to allow MChess to execute a test before stopping.
            Matches the /mct and /maxchesstime command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.MaxPreemptions">
            <summary>
            Indicates the number of preemptions mchess should use.
            Matches the /mp and /maxpreemptions command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.MaxExecs">
            <summary>
            Maximum number of executions/schedules to run.
            Matches the /me and /maxexecs command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.MaxExecSteps">
            <summary>
            Maximum execution steps per test run.
            Matches the /mes and /maxexecsteps command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.MaxExecTime">
            <summary>
            Maximum seconds per test run (-1 = unlimited), i.e. per schedule.
            Matches the /met and /maxexectime command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.ProcessorCount">
            <summary>
            The simulated processor count. Set to 0 for the full number of processors on the machine running the test.
            Matches the /pc and /processorcount command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.EnableRaceDetection">
            <summary>
            Specifies whether to perform race detection.
            Matches the /dr and /detectraces command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.EnableAtomicityChecking">
            <summary>
            Specifies whether to perform atomicity checking.
            Matches the /ca and /checkatomicity command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.EnableDeterminismChecking">
            <summary>
            Specifies whether to turn on determinism checking.
            Matches the /cd and /checkdeterminism command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.PreemptVolatiles">
            <summary>
            Specifies whether to preempt on accesses to volatiles; by default, mchess does.
            Matches the /v and /volatile command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.PreemptAllAccesses">
            <summary>
            Specifies whether to preempt on all data accesses.
            Matches the /pa and /preemptaccesses command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.ExtraCommandLineArgs">
            <summary>
            Specifies an array of arguments to pass to mchess.
            Each element in the array should be an individual argument.
            Whitespaces in an element will be escaped.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.Break">
            <summary>
            Specifies whether to break as a specific event.
            Matches the /brk and /break command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.EnableRepro">
            <summary>
            Matches the /ls and /repro command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.EnableTracing">
            <summary>
            Enables tracing by mchess. To control whether to trace for the loaded schedule or for all schedules see the <see cref="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.TraceAllSchedules"/> property.
            Matches the /trace and /printtrace command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.TraceAllSchedules">
            <summary>
            When tracing is enabled (by setting <see cref="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.EnableTracing"/> to true) this indicates whether to trace
            all schedules or just the last schedule ran.
            Setting this to true automatically sets <see cref="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.EnableTracing"/> to true.
            Matches the /alltraces and /printalltraces command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.TargetRace">
            <summary>
            ...??? not sure what this actually is. Once known, may need to change the name of the property.
            Matches the /targetrace command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.XSchedule">
            <summary>
            The schedule to use.
            This doesn't get serialized to the cmd line, but is used to pass it down
            to the controller that would save this to the appropriate file.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.ScheduleFilePath">
            <summary>
            Specifies the file path to the schedule file to use.
            Matches the /schedulefile command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.EnumerateObservations">
            <summary>
            Matches the /enumerateobservations command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.CheckObservations">
            <summary>
            Matches the /checkobservations command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.ObservationMode">
            <summary>
            Matches the /observationmode command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.ObservationFile">
            <summary>
            Matches the filename value of the /enumerateobservations and /checkobservations command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.ContinueFromLastSchedule">
            <summary>
            Indicates whether to continue from the last schedule of the previous run.
            Matches the /continue command line argument for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.IncludedAssemblies">
            <summary>
            Matches the /ia command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.FlipPreemptionSense">
            <summary>
            Indicates whether to disable preemptions by default.
            Flips the meaning of the DontPreemptxxx properties.
            Matches the /flip and /flippreempt command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.DontPreemptAssemblies">
            <summary>
            The assembly names excluded from preemptions.
            Matches the /dpa and /dontpreemptassembly command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.DontPreemptNamespaces">
            <summary>
            Indicates the namespaces excluded from preemptions.
            Matches the /dpn and /dontpreemptnamespace command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.DontPreemptTypes">
            <summary>
            Indicates the types excluded from preemptions.
            Matches the /dpt and /dontpreempttype command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.DontPreemptMethods">
            <summary>
            Indicates the methods excluded from preemptions.
            Matches the /dpm and /dontpreemptmethod command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.EnableLogging">
            <summary>
            Matches the /logging command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.PrintDiagnosticInformation">
            <summary>
            Indicates whether to also print which types are not instrumented.
            Matches the /diagnose command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.ShowHBExecs">
            <summary>
            Indicates whether MChess should report the number of HB execution steps in the output.
            Matches the /p:show_hbexecs command line argument for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.NoPopups">
            <summary>
            Indicates whether MChess should not display any popups.
            This is useful for when running mchess from a cmd-line on a build server.
            Matches the /p:nopopups command line argument for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions.NoTime">
            <summary>
            Indicates whether MChess should display performance times in output.
            Matches the /p:nopopups command line argument for mchess.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection,System.Func{System.Int32,System.Object,System.Object,System.String})">
            <summary>
            Asserts that two collections are equal.
            </summary>
            <param name="expected"></param>
            <param name="actual"></param>
            <param name="composeElementAssertFailureMessage">When specified, will allow for custom formatting of a message based on the element that failed.</param>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessInstrumentAssemblyAttribute">
            <summary>
            Instructs Chess to instrument an additional assembly other than the one containing the test.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessInstrumentAssemblyAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="assembly">The short or full name of the assembly.</param>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessInstrumentAssemblyAttribute.Assembly">
            <summary>The name of the assembly.</summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessInstrumentAssemblyAttribute.Exclude">
            <summary>
            When true, it will exclude the assembly from instrumentation.
            e.g. When applied to a method, if the assembly was defined as being instrumented by the owning class,
            then this would remove it from the list of assemblies to instrument by chess for this method.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.XmlExtensions.SelectXValues(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
            <summary>Selects the XElement.Values from the list of elements.</summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.XmlExtensions.ToXmlBool(System.Boolean)">
            <summary>Converts a boolean value to a valid boolean in xml according to xml schemas.</summary>
            <returns>"true" or "false" accordingly.</returns>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContext">
            <summary>The context of a single Chess unit test.</summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.TestContext">
            <summary>The base implementation for a context in which to run a test.</summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.ITestContext">
            <summary>Provides information about a context in which unit tests run in.</summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.ITestContext.Name">
            <summary>The friendly name for the context.</summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.ITestContext.ExpectedResultKey">
            <summary>The key of the expected result to use.</summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.TestContext.ExpectedResultKey">
            <summary>The key of the expected result to use.</summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContext.ExpectedChessResultKey">
            <summary>
            When set, indicates the key for the explicit result to expect. This is mainly used when a test may have
            different results based on the context.
            Some test types don't use this feature, in which case this property will always return null.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContext.PreRunScript">
            <summary>Gets the script to execute before the testing system executes mchess.</summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.RegressionTestExpectedResultAttribute">
            <summary>
            Specifies the expected regression test result.
            </summary>
            <remarks>
            This is a special expected result test attribute because it applies to all tests defined on a method.
            This assertion applies after a test case has run and it's accociated expected result specification
            has been asserted. It allows for performing regression tests on other regression test features or tests
            that don't have specific expected result capability.
            </remarks>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.RegressionTestExpectedResultAttribute.#ctor(Microsoft.Concurrency.TestTools.UnitTesting.TestResultType[])">
            <summary>Marks a method as a data race test method.</summary>
            <param name="expResultTypes">The valid results expected from this test. The test will pass when any of the specified result types occur.</param>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.RegressionTestExpectedResultAttribute.ExpectedResultTypes">
            <summary>The result expected for this regression test.</summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.ObservationTestMethodAttribute">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.ObservationTestMethodAttribute.CheckingMode">
            <summary>
            The default is Linearizability.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.ObservationTestMethodAttribute.GeneratorName">
            <summary>
            The name of the method with an <see cref="T:Microsoft.Concurrency.TestTools.UnitTesting.ObservationGeneratorAttribute"/> attribute
            applied to it.
            You can specify the name of a method within the same test class, or include the full name
            of the method within the test assembly: "namespace.className.methodName".
            If left blank, then the FileIdentifier is used or it assumes the generator is the same
            test method (the <see cref="T:Microsoft.Concurrency.TestTools.UnitTesting.ObservationGeneratorAttribute"/> attribute still needs to be specified).
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.ObservationTestMethodAttribute.FileIdentifier">
            <summary>
            The custom file identifier used to compute the filename of the observation file to use
            as input into this test.
            It's preferred to set the ObservationGenerator property over this one.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.DebugAssertFailedException">
            <summary>
            The exception that is thrown to indicate a call to <see cref="M:System.Diagnostics.Debug.Assert(System.Boolean)"/> failed.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.ConcurrencyUnitTestException">
            <summary>
            This is the base class for all of the Concurrency Unit Testing exceptions.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Xml.TestAssemblyReader">
            <summary>
            Reader that reads the Concurrent Unit Test information from an assembly.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Xml.TestAssemblyReader.CreateXTestAssemblyPlaceholder(System.String)">
            <summary>
            Creates a valid XElement instance that can be used as a placeholder to load
            an assembly that may or may not actually exist yet. (i.e. may have not been built)
            </summary>
            <param name="assyLocation"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Xml.TestAssemblyReader.#ctor(System.String)">
            <summary>
            Creates a new instance for reading the assembly at the specified location.
            </summary>
            <param name="assemblyLocation">The path to the assembly to read. The assembly doesn't need to exist.</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Xml.TestAssemblyReader.#ctor(System.Reflection.Assembly)">
            <summary>
            Creates a new instance that reads the specified assembly.
            </summary>
            <param name="testAssembly">The assembly already loaded in memory.</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Xml.TestAssemblyReader.Read">
            <summary>
            Reads the assembly specified in the constructor.
            If the file doesn't exist, an empty test assembly element is returned.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.ITestContextsProviderAttribute">
            <summary>Interface needed to mark an Attribute as a provider of unit test contexts.</summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.ITestContextsProviderAttribute.GetContexts(System.Type)">
            <summary>
            Gets the default contexts to apply to unit test methods in the specified class
            that do not explicitly declare contexts at the method level.
            <br/>
            This overload is only used when the provider attribute is applied to a class.
            </summary>
            <param name="testClass">The class which this provider applies to.</param>
            <returns>An enumeration of unit test contexts that should be applied to each method.</returns>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.ITestContextsProviderAttribute.GetContexts(System.Reflection.MethodInfo)">
            <summary>
            Gets the contexts to apply to the specified test method.
            When used, these contexts will replace any contexts declared at the
            test class level.
            <br/>
            This overload is only used when the provider attribute is applied to a method.
            </summary>
            <param name="testMethod">The method which this provider applies to.</param>
            <returns>An enumeration of unit test contexts that should be applied to the specified method.</returns>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.InvalidUnitTestConfigurationException">
            <summary>Exception thrown when a MCUT assembly has an invalid configuration.</summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.UnitTestingExtensions.ToCommandLineOptionValue(Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessBreak)">
            <summary>
            Returns the flags portion of the "/brk:[flags]" commandline option.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.UnitTestingExtensions.ToCommandLineOptionValue(Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessObservationMode)">
            <summary>
            Returns the option value for the "/observationmode:[value]" commandline option.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestMethodAttribute">
            <summary>
            Marks a method as a chess test method and creates a single test context.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.TestResultType">
            <summary>
            Represents the enumeration of all possible exit codes that can be returned by mcut.
            Not all test runners will emit all of these results.
            </summary>
            <remarks>
            Note: This enum should match the TestResultTypeXEnum simple type in the schema file.
            </remarks>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.TestResultType.Error">
            <summary>Indicates a general unit test error occured. e.g. non-zero exit code.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.TestResultType.Exception">
            <summary>Indicates the unit test threw an exception.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.TestResultType.AssertFailure">
            <summary>Indicates a unit test assertion failed.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.TestResultType.Inconclusive">
            <summary>Indicates a unit test assertion was inconclusive.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.TestResultType.ResultAssertFailure">
            <summary>Indicates an assertion on the result of a test failed.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.TestResultType.ResultInconclusive">
            <summary>Indicates an assertion on the result of a test was inconclusive.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.TestResultType.RegressionAssertFailure">
            <summary>Indicates an assertion that applies to running a test in regression mode has failed.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.TestResultType.DataRace">
            <summary>Indicates that a race was found in the unit test.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.TestResultType.Deadlock">
            <summary>Indicates that the unit test deadlocked.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.TestResultType.Livelock">
            <summary>Indicates that the unit test deadlocked.</summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.ObservationGranularity">
            <summary>
            Defines the granularity for which an Observation Generator should record at.
            </summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.ObservationGranularity.Serial">
            <summary>Serial interleaving.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.ObservationGranularity.Coarse">
            <summary>Coarse interleaving.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.ObservationGranularity.All">
            <summary>All interleaving.</summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.ObservationTestCheckingMode">
            <summary>
            The checking mode to run an Observation Test under.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)">
            <summary>
            Indicates an exception of the specified type is expected to be thrown from the test method.
            </summary>
            <param name="exceptionType">This type should derive from Exception.</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type,System.String)">
            <summary>
            Indicates an exception of the specified type is expected to be thrown from the test method.
            </summary>
            <param name="exceptionType">This type should derive from Exception.</param>
            <param name="noExceptionMessage">The message to display when no exception at all was thrown by the unit test.</param>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.ExpectedExceptionAttribute.ExpectedMessage">
            <summary>
            When specified, not null, indicates the exact Exception.Message that should be on the expected thrown exception.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContextAttribute">
            <summary>
            Represents non-default context settings for test cases.
            Each instance will create a new test context.
            When applied to a class, each method in the class will have this context.
            For documentation on each property, see the <see cref="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessOptions"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContextAttribute.Name">
            <summary>The display name to use for this context instance.</summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContextAttribute.ExpectedResultKey">
            <summary>The key of the expected result to use.</summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContextAttribute.ExpectedChessResultKey">
            <summary>
            When set, indicates the key of the explicit chess test result to expect.
            This is mainly used when a test may have different results based on the context.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContextAttribute.PreRunScript">
            <summary>
            Gets the script to execute just before running the command that runs the test.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContextAttribute.MaxPreemptions">
            <summary>
            A value of -1 indicates unlimited preemptions.
            A value of 0 indicates no preemptions.
            Don't set this property if you want to use the default number of preemptions used by mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContextAttribute.MaxExecs">
            <summary>
            Indicates the maximum number of schedules to run.
            A value of -1 indicates unlimited schedules.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContextAttribute.MaxExecSteps">
            <summary>A value of -1 indicates unlimited execution time.</summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContextAttribute.MaxExecTime">
            <summary>A value of -1 indicates unlimited execution time.</summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContextAttribute.ProcessorCount">
            <summary>A number, greater than 0. If not set, the max available is used.</summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContextAttribute.EnableRaceDetection">
            <summary>
            Specifies whether to perform race detection.
            Matches the /dr and /detectraces command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContextAttribute.EnableAtomicityChecking">
            <summary>
            Specifies whether to perform atomicity checking.
            Matches the /ca and /checkatomicity command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContextAttribute.PreemptVolatiles">
            <summary>
            Specifies whether to preempt on accesses to volatiles; Default is true.
            Matches the /v and /volatile command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContextAttribute.PreemptAllAccesses">
            <summary>
            Specifies whether to preempt on all data accesses.
            Matches the /pa and /preemptaccesses command line arguments for mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTestContextAttribute.ExtraCommandLineArgs">
            <summary>
            Specifies extra command line arguments to pass to mchess.
            Each arg should be a separate element in this array as spaces will cause the
            argument to be surrounded by quotes on the actual command line.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.TaskMeter.#ctor(System.String,Microsoft.Concurrency.TestTools.UnitTesting.TaskMeter.Color)">
            <summary>
            Creates a new instance with a specified color to use in visual displays.
            </summary>
            <param name="name">The display name of this meter.</param>
            <param name="color">
            A predefined color from the enumeration TaskMeter.Color
            </param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.TaskMeter.#ctor(System.String)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="name">The display name of this meter.</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.TaskMeter.MeasurementIsUnderway">
            <summary>
            Checks if a measurement is in progress.
            </summary>        
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.TaskMeter.Start">
            <summary>
            Starts a new interval.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.TaskMeter.End">
            <summary>
            Ends an interval previously started with a call to <see cref="M:Microsoft.Concurrency.TestTools.UnitTesting.TaskMeter.Start"/>.
            </summary>
            <returns>The number of ticks elapsed since the call to <see cref="M:Microsoft.Concurrency.TestTools.UnitTesting.TaskMeter.Start"/>.</returns>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.TaskMeter.GetIntervals">
            <summary>
            Gets an enumeration of all the intervals captured by this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.TaskMeter.Name">
            <summary>
            The display name of this instance.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.TaskMeter.Interval">
            <summary>
            Represents an individual interval.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.XmlUtil.Elements(System.Xml.Linq.XElement,System.Xml.Linq.XName[])">
            <summary>
            Returns a filtered collection of the child elements of this element or document,
            in document order. Only elements that match one of the specified System.Xml.Linq.XNames
            are included in the collection.
            </summary>
            <param name="source"></param>
            <param name="names">The names for which to match.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.PreemptabilityTargetKind">
            <summary>
            The kind of the target being specified by a <see cref="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTogglePreemptabilityAttribute"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessBreak">
            <summary>
            Indicates when to break.
            </summary>
            <remarks>
            When changing, be sure to update the testlist.xsd.
            </remarks>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessResultActionType">
            <summary>
            An action available to perform on the results of an mchess results.xml file
            or for a specific result.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.MChessResultType">
            <summary>One of the possible result types exposed by mchess.</summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessExitCode">
            <summary>
            Represents the enumeration of all possible exit codes possible by Chess or MChess.
            </summary>
            <remarks>
            This enumeration should match up with the exit codes defined in Chess\ChessApi.h
            of the form CHESS_EXIT_*. Also, when changing, be sure to update the ChessSchema.xsd.
            </remarks>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessExitCode.UnitTestException">
            <summary>Indicates a Concurrency Unit Test failure due to an unexpected exception.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessExitCode.UnitTestAssertFailure">
            <summary>Indicates a Concurrency Unit Test failure due to an unmet assert.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessExitCode.UnitTestAssertInconclusive">
            <summary>Indicates a Concurrency Unit Test failure due to an inconclusive assert.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessExitCode.Unknown">
            <summary>Used when the exit code is unknown (either from the process or results file).</summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.ExpectedResultAttribute">
            <summary>
            Indicates the expected result when running a test.
            When no key is set, this attribute applies to all test types on a test method
            but only for contexts that don't have an ExpectedResultKey set.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.ExpectedResultAttribute.Key">
            <summary>The programmatic key used to identify this result from a multi-test case scenario.</summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.ExpectedResultAttribute.Result">
            <summary>
            The result expected of this test.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.ExpectedResultAttribute.Message">
            <summary>
            The message expected to be reported from mcut.
            A default value of null indicates this property is not asserted.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessDefaultPreemptabilityAttribute">
            <summary>
            Indicates that Chess should enable or disable preemptions by default.
            Use of <see cref="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTogglePreemptabilityAttribute"/> can help to specify
            the opposite of this default.
            Without specifying this attribute Chess has preemptions enabled.
            </summary>
            <remarks>
            Setting of this attribute will force the developer to redefine any
            <see cref="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTogglePreemptabilityAttribute"/>s that were defined higher in
            the test assembly hierarchy (i.e. assembly, test class, test method).
            </remarks>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessDefaultPreemptabilityAttribute.#ctor(System.Boolean)">
            <summary>
            Creates a new instance indicating whether preemptions should be enabled by default.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessDefaultPreemptabilityAttribute.Enabled">
            <summary>Indicates whether Chess should enable preemptions by default.</summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessAPI.Choose(System.Int32)">
            <summary>Performs a misc task using a Random number generator instance.</summary>
            <remarks>This method is provided mainly for regression testing.</remarks>
            <param name="numChoices">arbitrary number. This becomes the exclusive upper bound on the number returned.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Xml.UnitTestingSchemaUtil">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Xml.UnitTestingSchemaUtil.GetTestListSchema">
            <summary>Gets the schema for xml test list files.</summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Xml.UnitTestingSchemaUtil.GetChessSchema">
            <summary>Gets the schema for chess results.xml files.</summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Xml.UnitTestingSchemaUtil.GetConcurrencySchema">
            <summary>Gets the schema for common concurrency xml types.</summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Xml.UnitTestingSchemaUtil.ValidateTestListXml(System.Xml.Linq.XDocument)">
            <summary>
            Validates a test list or test assembly xml document.
            </summary>
            <param name="xdoc"></param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Xml.UnitTestingSchemaUtil.ValidateTestCaseXml(System.Xml.Linq.XDocument)">
            <summary>
            Validates a test case xml document.
            These documents may be passed into mcut when using the 'runTestCase' command.
            </summary>
            <param name="xdoc"></param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Xml.UnitTestingSchemaUtil.ValidateTestResultXml(System.Xml.Linq.XDocument)">
            <summary>
            Validates a test result xml document.
            </summary>
            <param name="xdoc"></param>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.TestArgsProviderPropertyAttribute">
            <summary>
            Identifies a static property from which test method arguments may be retrieved.
            The property must be a public and static property with a type of IEnumerable&lt;object&gt;.
            Furthermore, this property needs to be able to produce the arguments by only instantiating
            the test class and calling the property's get value method.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.ITestMethodArgsProvider">
            <summary>Marks an Attribute as a provider of arguments to the test method the attribute is applied to.</summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.IgnoreAttribute">
            <summary>Marks a test class or method to be ignored.</summary>
            <remarks>This is a good way to keep code to compile but not actually be recognized or run by the CUT Framework.</remarks>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.TestArgsAttribute">
            <summary>
            Specifies a single set of arguments for a test method.
            Apply multiple of these attributes to manually specify different sets of arguments.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.TestArgsAttribute.#ctor(System.Object[])">
            <summary>Specifies the arguments for a single test case.</summary>
            <param name="data">List of arguments. Be sure the types are correct.</param>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.DataRaceTestMethodAttribute">
            <summary>
            Marks a method as a data race detection method.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.DataRaceTestMethodAttribute.#ctor">
            <summary>Marks a method as a data race test method.</summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.PerformanceTestMethodAttribute">
            <summary>
            Marks a method as a performance method.
            By default, running of this test will cause performance metrics to be run on it.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.PerformanceTestMethodAttribute.#ctor">
            <summary>Marks a method as a performance test method.</summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.PerformanceTestMethodAttribute.WarmupRepetitions">
            <summary>
            Specifies the number of warmup iterations should be executed before timings are started.
            The default is 0, indicating no warmup iterations.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.PerformanceTestMethodAttribute.Repetitions">
            <summary>
            Specifies the number of times to execute a test method while being timed.
            The default is 1.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Xml.XTestResultNames">
            <summary>
            The XNames used to describe test results.
            </summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Xml.XTestResultNames.TestResult">
            <summary>The container element for the overall result of a single test run.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Xml.XTestResultNames.ATestResultType">
            <summary>The <see cref="T:Microsoft.Concurrency.TestTools.UnitTesting.TestResultType"/> describing the final result of the test.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Xml.XTestResultNames.AExitCode">
            <summary>The integer exit code.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Xml.XTestResultNames.AChessExitCode">
            <summary>The <see cref="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessExitCode"/> describing the exit code returned from Chess.</summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.ContextsPropertyAttribute">
            <summary>
            Identifies a static property to use to get the <see cref="T:Microsoft.Concurrency.TestTools.UnitTesting.ITestContext"/> instances to use.
            When applied to a class, this becomes the default property to use for all tests in the class.
            When applied to a method, this overrides any class-specified contexts.
            The property specified should be of the type <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.ContextsPropertyAttribute.#ctor(System.String)">
            <summary></summary>
            <param name="propertyName">The name of the property. This property should be of the type IEnumerable&lt;ITestCaseContext&gt;.</param>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ExpectedChessResultAttribute">
            <summary>
            Indicates the expected mchess results for this test.
            NOTE: This only verifies the chess results xml, not the overall test result.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ExpectedChessResultAttribute.Key">
            <summary>The programmatic key used to identify this result from a multi-test case scenario.</summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ExpectedChessResultAttribute.ExitCode">
            <summary>
            The exit code expected to be returned from mchess.
            If set to any value, the IsExitCodeSet property is set to true, thus
            indicating to the testing framework to assert the exit code.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ExpectedChessResultAttribute.SchedulesRan">
            <summary>
            The expected number of schedule ran.
            A default value of 0 indicates this property is not asserted.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ExpectedChessResultAttribute.LastThreadCount">
            <summary>
            [NotImplemented]
            The expected number of threads in the last schedule ran.
            A default value of 0 indicates this property is not asserted.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ExpectedChessResultAttribute.LastExecSteps">
            <summary>
            [NotImplemented]
            The expected number of execution steps in the last schedule ran.
            A default value of 0 indicates this property is not asserted.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ExpectedChessResultAttribute.LastHBExecSteps">
            <summary>
            [NotImplemented]
            The expected number of happens-before execution steps in the last schedule ran.
            A default value of 0 indicates this property is not asserted.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.TaskoMeterTestContext">
            <summary>The context of a TaskoMeter test.</summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.DeterminismTestMethodAttribute">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.ObservationGeneratorAttribute">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.ObservationGeneratorAttribute.FileIdentifierRegexPattern">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.ObservationGeneratorAttribute.Granularity">
            <summary>
            The default is Serial.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.ObservationGeneratorAttribute.FileIdentifier">
            <summary>
            The custom file identifier used to compute the final filename for the generated observation file.
            Care should be taken to make sure that each custom FileIdentifier is unique within
            each assembly. It is recommended to keep this set to null so the system can auto generate
            unique file identifiers.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.XChessNames">
            <summary>
            XName instances for names used by wchess and mchess.
            i.e. results.xml files.
            </summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Chess.XChessNames.CmdLineArg">
            <summary>Element for an extra cmd line arg to pass to MChess.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Chess.XChessNames.Results">
            <summary>
            The element name reported by chess. This gets switched to <see cref="F:Microsoft.Concurrency.TestTools.UnitTesting.Chess.XChessNames.ChessResults"/> 
            once the chess result file has been processed.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.XChessNames.Actions">
            <summary>
            Provides the list of actions provided by chess.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Xml.XConcurrencyNames">
            <summary>
            The commmon XNames concurrency xml schemas.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Xml.XNames">
            <summary>
            The XNames used in testlist xml files.
            </summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Xml.XNames.Arg">
            <summary>The element representing a generic argument to be passed into a test.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Xml.XNames.MSBuildProperties">
            <summary>'properties' element for the 'msbuild' element.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Xml.XNames.Parameters">
            <summary>The defined parameters defined for a unit test.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Xml.XNames.ChessUnitTest">
            <summary>Element for an MChess unit test.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Xml.XNames.MChessPreRunScript">
            <summary>The element used to specify any command-line commands to run before running mchess.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Xml.XNames.UnitTest">
            <summary>Element for a standard unit test.</summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.AssertInconclusiveException">
            <summary>
            The exception that is thrown to indicate a Concurrency Unit Test is not yet implemented or some other test should pass before this test will pass.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.ConflictSerializabilityTestMethodAttribute">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Xml.XTestCaseNames">
            <summary>
            The XNames used in test case xml files.
            </summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Xml.XTestCaseNames.TestCase">
            <summary>The element for describing a test case.</summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Xml.XTestCaseNames.ATestTypeName">
            <summary>Attribute for specifying the type of test to run.</summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Util">
            <summary>
            Helper class for this assembly. 
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Util.GetStaticPropertyValue``1(System.Type,System.String)">
            <summary>
            Gets the value of the static property on the specified class.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.AssertFailedException">
            <summary>
            The exception that is thrown to indicate failure of a Concurrency Unit Test.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.ScheduleTestMethodAttribute">
            <summary>
            Marks a method as an execution schedule method.
            The default just asserts no errors are detected.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.ScheduleTestMethodAttribute.#ctor">
            <summary>Marks a method as an execution schedule test method.</summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.ScheduleTestMethodAttribute.MaxPreemptions">
            <summary>
            Indicates the maximum number of preemptions to insert into the scheduler.
            A value of 0 indicates no preemptions. (Default is 2)
            Don't set this property if you want to use the default number of preemptions used by mchess.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.ScheduleTestMethodAttribute.MaxSchedules">
            <summary>
            The maximum number of schedules to run.
            The default is unlimited schedules.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.ScheduleTestMethodAttribute.MaxRunTime">
            <summary>
            Indicates the maximum time (in seconds) to allow this test to run.
            This means that all schedule explorations must be done within the time specified.
            At that time, schedule exploration stops and the test will pass.
            The default is an unlimited amount of time.
            </summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.ScheduleTestMethodAttribute.PreemptAllAccesses">
            <summary>
            Specifies whether to preempt on all data accesses.
            Matches the /pa and /preemptaccesses command line arguments for mchess.
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.AssertResult">
            <summary>The result of a particular assert.</summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.IAssertPolicy">
            <summary>
            Interface that defines the assert policy to use
            </summary>
            <remarks>The assert policy interface is used to define how the runtime should behave when an
            assertion failure occurs. By default, the assertion policy in use it to throw an <see cref="T:Microsoft.Concurrency.TestTools.UnitTesting.ConcurrencyUnitTestException"/> exception
            when a failure occurs. Usually the default behavior is sufficent however for specialized test
            environment such as STM a different assert policy (assert behavior) is needed</remarks>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.IAssertPolicy.OnRunBegin">
            <summary>
            Set up things to do. For example, create a logger.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.IAssertPolicy.OnRunEnd">
            <summary>
            Cleanup, disposing objects, etc.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.IAssertPolicy.HandleResult(Microsoft.Concurrency.TestTools.UnitTesting.AssertResult,System.String)">
            <summary>
            How to handle an assert failure. Depending on your requirements you could
            simply throw an exception, or log the failure, etc.
            </summary>
            <param name="result">The result of the assert.</param>
            <param name="text">The text that describes the result.</param>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Assert">
            <summary>
            Facitlity to provide for assertion of Expected and Actual values.
            </summary>
        </member>
        <member name="F:Microsoft.Concurrency.TestTools.UnitTesting.Assert.Policy">
            <summary>
            Class Member that stores the current assertion policy
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.HandleResult(System.Boolean,System.String,System.String,System.Object[])">
            <summary>
            Method to print the assertion message with all information
            </summary>
            <param name="didPass">flag to check whether assertion passed or failed</param>
            <param name="assertionName">Type of assertion</param>
            <param name="message">Message to print</param>
            <param name="parameters">args to pass to the String.Format</param>
            <remarks>If parameters is null we will not use String.Format. Instead the message is printed
            directly</remarks>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.HandleResult(Microsoft.Concurrency.TestTools.UnitTesting.AssertResult,System.String,System.String,System.Object[])">
            <summary>
            Method to print the assertion message with all information
            </summary>
            <param name="result">The result of the assertion.</param>
            <param name="assertionName">Type of assertion</param>
            <param name="message">Message to print</param>
            <param name="parameters">args to pass to the String.Format</param>
            <remarks>If parameters is null we will not use String.Format. Instead the message is printed
            directly</remarks>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.Pass(System.String,System.Object[])">
            <summary>
            Method to print passing of test case
            </summary>
            <param name="message">Format of the String message to print</param>
            <param name="args">Args to pass to String.Format</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.Fail(System.String,System.Object[])">
            <summary>
            Method to print Failure of test case
            </summary>
            <param name="message">Format of the String message to print</param>
            <param name="args">Args to pass to String.Format</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.Inconclusive(System.String,System.Object[])">
            <summary>
            Indicates that the assertion can not be verified.
            </summary>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.IsTrue(System.Boolean,System.String,System.Object[])">
            <summary>
            Method to check whether the condition is true
            </summary>
            <param name="actual">Condition to check</param>
            <param name="format">Format of the String message to print</param>
            <param name="args">Args to pass to String.Format</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.IsFalse(System.Boolean,System.String,System.Object[])">
            <summary>
            Method to check whether the condition is false
            </summary>
            <param name="actual">Condition to check</param>
            <param name="format">Format of the String message to print</param>
            <param name="args">Args to pass to String.Format</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.IsNull``1(``0,System.String,System.Object[])">
            <summary>
            Method to print when actual object is null
            </summary>
            <param name="actual">Object to test for null</param>
            <param name="format">Format of the String message to print</param>
            <param name="args">Args to pass to String.Format</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.IsNotNull``1(``0,System.String,System.Object[])">
            <summary>
            Method to print when actual object is not null
            </summary>
            <param name="actual">Object to test for null</param>
            <param name="format">Format of the String message to print</param>
            <param name="args">Args to pass to String.Format</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.FormatMsg_AreEqual(System.Boolean,System.String,System.Object,System.Object)">
            <summary>
            Method to formulate the message to display upon equal operation on two objects
            </summary>
            <param name="didPass">flag to determine whether to print pass or fail</param>
            <param name="message">Message to display</param>
            <param name="expected">Expected object</param>
            <param name="actual">Actual object</param>
            <returns>Returns the message string to print</returns>
            <remarks>If the objects are of different type, the return string also prints the type of the objects</remarks>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0,System.String,System.Object[])">
            <summary>
            Method to check if expected equals actual
            </summary>
            <typeparam name="T">Type of values to compare</typeparam>
            <param name="expected">Expected value</param>
            <param name="actual">Actual value</param>
            <param name="message">Message to display (in String.Format format) if comparison fails</param>
            <param name="parameters">The array of objects to be passed to String.Format</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.FormatMsg_AreNotEqual(System.Boolean,System.String,System.Object,System.Object)">
            <summary>
            Method to formulate the message to display upon equal operation on two objects
            </summary>
            <param name="didPass">flag to determine whether to print pass or fail</param>
            <param name="message">Message to display</param>
            <param name="notExpected">Expected object</param>
            <param name="actual">Actual object</param>
            <returns>Returns the message string to print</returns>
            <remarks>If the objects are of different type, the return string also prints the type of the objects</remarks>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0,System.String,System.Object[])">
            <summary>
            Method to check if expected equals actual
            </summary>
            <typeparam name="T">Type of values to compare</typeparam>
            <param name="expected">Expected value</param>
            <param name="actual">Actual value</param>
            <param name="message">Message to display (in String.Format format) if comparison fails</param>
            <param name="parameters">The array of objects to be passed to String.Format</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.FormatMsg_AreSame(System.Boolean,System.String,System.Object,System.Object)">
            <summary>
            Method to formulate the message to display upon two objects not being the same instance.
            </summary>
            <param name="didPass">flag to determine whether to print pass or fail</param>
            <param name="message">Message to display</param>
            <param name="expected">Expected object</param>
            <param name="actual">Actual object</param>
            <returns>Returns the message string to print</returns>
            <remarks>If the objects are of different type, the return string also prints the type of the objects</remarks>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object,System.String,System.Object[])">
            <summary>
            Method to check if two objects refer to the same instance.
            </summary>
            <param name="expected">Expected object</param>
            <param name="actual">Actual object</param>
            <param name="message">Message to display (in String.Format format) if comparison fails</param>
            <param name="parameters">The array of objects to be passed to String.Format</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.Throws(System.Type,System.Action)">
            <summary>
            Asserts that an action throws a certain exception
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.Throws``1(System.Action)">
            <summary>
            Asserts that an action throws a certain exception
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Assert.Throws``1(System.Action,System.Action{``0})">
            <summary>
            Asserts that an action throws a certain exception.
            </summary>
            <param name="action"></param>
            <param name="continuation">The action to perform upon any exception being thrown.</param>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Assert.ThrowingPolicy">
            <summary>
            Defines the default assertion policy that throws an <see cref="T:Microsoft.Concurrency.TestTools.UnitTesting.ConcurrencyUnitTestException"/> exception on assert failure
            </summary>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTogglePreemptabilityAttribute">
            <summary>
            Toggles whether preemptions should be enabled or disabled on a target
            assembly, namespace, type or method. This toggles the setting specified in the
            <see cref="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessDefaultPreemptabilityAttribute"/> at the current declaration
            level in the test assembly hierarchy (i.e. assembly, test class, test method).
            If no <see cref="T:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessDefaultPreemptabilityAttribute"/> is defined, Chess enables
            preemptions by default.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTogglePreemptabilityAttribute.#ctor(Microsoft.Concurrency.TestTools.UnitTesting.Chess.PreemptabilityTargetKind,System.String)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="targetKind">The type of target: assembly, namespace, type or method.</param>
            <param name="targetName">The name of the target to not preempt.</param>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTogglePreemptabilityAttribute.TargetKind">
            <summary>The kind of the target.</summary>
        </member>
        <member name="P:Microsoft.Concurrency.TestTools.UnitTesting.Chess.ChessTogglePreemptabilityAttribute.TargetName">
            <summary>The name of the target to toggle preemptability.</summary>
        </member>
    </members>
</doc>
