<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Concurrency.UnitTesting.Extensions</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Concurrency.TestTools.Extensions.FauxParallel">
            <summary>
            An .net 3.5 valid implementation of the 4.0's Parallel class.
            </summary>
            <remarks>
            This is provided as a temporary replacement until the Chess wrappers
            for the TPL is finished.
            </remarks>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.Extensions.FauxParallel.Invoke(System.Action[])">
            <summary>
            Executes each of the provided actions, possibly in parallel.
            </summary>
            <param name="actions">the action(s) to execute.</param>
            <exception cref="T:System.AggregateException">The exception that is thrown when any action in the actions array throws an exception.</exception>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.Extensions.FauxParallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
            <summary>
            Executes a for loop in which iterations may run in parallel.
            </summary>
            <param name="fromInclusive">The start index, inclusive.</param>
            <param name="toExclusive">The end index, exclusive.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.Extensions.FauxParallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Executes a for each operation on an System.Collections.IEnumerable{TSource}
            in which iterations may run in parallel.
            </summary>
            <typeparam name="TSource">The type of the data in the source.</typeparam>
            <param name="source">An enumerable data source.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
        </member>
        <member name="T:Microsoft.Concurrency.TestTools.Extensions.ComponentHarness`1">
            <summary>
            Helper class for constructing test harnesses for concurrent objects.
            </summary>
            <typeparam name="T">The type of the object being tested.</typeparam>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.Extensions.ComponentHarness`1.#ctor">
            <summary>
            Create a harness object.
            </summary>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.Extensions.ComponentHarness`1.DefineConstructor(System.String,System.Func{`0})">
            <summary>
            Register a way to construct an object under test.
            </summary>
            <param name="name">The name used to refer to this constructor.</param>
            <param name="constructor">The delegate returning the constructed object.</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.Extensions.ComponentHarness`1.DefineOperation(System.String,System.Action{`0})">
            <summary>
            Register an operation to perform on the object under test.
            </summary>
            <param name="name">The name used to refer to this operation.</param>
            <param name="operation">The delegate performing the observed operation
            (must include explicit observation calls for observed arguments and return values).</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.Extensions.ComponentHarness`1.RunTest(System.String,System.String[][])">
            <summary>
            Run a specified concurrent test.
            </summary>
            <param name="constructor">The constructor to use.</param>
            <param name="matrix">The operation sequences to use for each thread.</param>
        </member>
        <member name="M:Microsoft.Concurrency.TestTools.Extensions.ComponentHarness`1.RunRandomTest(System.Int32,System.Int32,System.Int32)">
            <summary>
            Run a randomly selected concurrent test.
            </summary>
            <param name="seed">The random seed to use.</param>
            <param name="threads">The number of threads to use.</param>
            <param name="ops">The number of operations to use per thread.</param>
        </member>
    </members>
</doc>
